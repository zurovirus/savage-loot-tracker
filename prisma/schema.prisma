// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Player{
  id        Int @id @default(autoincrement())
  name      String 
  class     Class @relation(fields: [classId], references: [id])
  classId   Int
  loots     PlayerLoot[]
  groups    Group[]
}

model Group{
  id        Int @id @default(autoincrement())
  name      String @unique
  players   Player[]
}

model Role {
  id        Int @id @default(autoincrement())
  name      String @unique
  classes   Class[]
}

model Class {
  id        Int @id @default(autoincrement())
  name      String @unique
  role      Role @relation(fields: [roleId], references: [id])
  roleId    Int
  players   Player[]
}

model Tier {
  id        Int @id @default(autoincrement())
  name      String @unique
  fights    Fight[]
}

model Fight {
  id        Int @id @default(autoincrement())
  name      String @unique
  floor     Int
  tier      Tier @relation(fields: [tierId], references: [id])
  tierId    Int
  loots     Loot[]
}

model Loot_Type {
  id        Int @id @default(autoincrement())
  name      String @unique
  loots     Loot[]
}

model Loot {
  id        Int @id @default(autoincrement())
  name      String @unique
  image     String?
  type      Loot_Type @relation(fields: [typeId], references: [id])
  typeId    Int
  fights    Fight[]
  players   PlayerLoot[]
}

model PlayerLoot {
  player    Player @relation(fields: [playerId], references: [id])
  playerId  Int
  loot      Loot @relation(fields: [lootId], references: [id])
  lootId    Int
  date      DateTime  @default(now())
  @@id([playerId, lootId])
}